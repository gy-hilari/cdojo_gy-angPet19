{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/all-pets/all-pets.component.html","/./src/app/app.component.html","/./src/app/edit-pet/edit-pet.component.html","/./src/app/home/home.component.html","/./src/app/new-pet/new-pet.component.html","/./src/app/view-pet/view-pet.component.html","/./src/app/all-pets/all-pets.component.ts","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/edit-pet/edit-pet.component.ts","/./src/app/home/home.component.css","/./src/app/home/home.component.ts","/./src/app/http.service.ts","/./src/app/new-pet/new-pet.component.ts","/./src/app/view-pet/view-pet.component.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h3>{{title}}</h3>\\n<button [routerLink]=\\\"['/pets/new']\\\">Add a pet to the shelter</button>\\n<hr>\\n\\n\\n<div>\\n    <div class=\\\"table-section\\\">\\n        <h3>Name:</h3>\\n        <p *ngFor=\\\"let pet of pets\\\">\\n            {{pet['name']}}\\n        </p>\\n    </div>\\n    <div class=\\\"table-section\\\">\\n        <h3>Type:</h3>\\n        <p *ngFor=\\\"let pet of pets\\\">\\n            {{pet['type']}}\\n        </p>\\n    </div>\\n    <div class=\\\"table-section\\\">\\n        <h3>Actions:</h3>\\n        <div *ngFor=\\\"let pet of pets\\\" class=\\\"table-interface\\\">\\n            <button [routerLink]=\\\"['/pets', pet['_id']]\\\">Details</button>\\n            <button [routerLink]=\\\"['/pets', pet['_id'], 'edit']\\\">Edit</button>\\n        </div>\\n    </div>\\n    <hr>\\n</div>\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div id=\\\"container\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n  <!-- <button [routerLink]=\\\"['/pets']\\\">Pets</button>\\n  <button [routerLink]=\\\"['/pets/new']\\\">New Pet</button>\\n  <button [routerLink]=\\\"['/pets/1/edit']\\\">Edit Pet</button>\\n  <button [routerLink]=\\\"['/pets/1']\\\">View Pet</button> -->\\n  <hr>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"","module.exports = \"<h3>{{title}}</h3>\\n\\n<!-- #region validations -->\\n<!-- Name -->\\n<p *ngIf=\\\"newPet['name'].length < 3 && messages['nameShort']['display'] == true \\\">\\n        {{messages['nameShort']['message']}}\\n    </p>\\n    <p *ngIf=\\\"newPet['name'].length > 45 && messages['nameLong']['display'] == true \\\">\\n        {{messages['nameLong']['message']}}\\n    </p>\\n    \\n    <!-- Type -->\\n    <p *ngIf=\\\"newPet['type'].length < 3 && messages['typeShort']['display'] == true \\\">\\n        {{messages['typeShort']['message']}}\\n    </p>\\n    <p *ngIf=\\\"newPet['type'].length > 45 && messages['typeLong']['display'] == true \\\">\\n        {{messages['typeLong']['message']}}\\n    </p>\\n    \\n    <!-- Description -->\\n    <p *ngIf=\\\"newPet['description'].length < 3 && messages['descShort']['display'] == true \\\">\\n        {{messages['descShort']['message']}}\\n    </p>\\n    <p *ngIf=\\\"newPet['description'].length > 45 && messages['descLong']['display'] == true \\\">\\n        {{messages['descLong']['message']}}\\n    </p>\\n    \\n    <!-- Skill -->\\n    <ng-template ngFor let-skill [ngForOf]=\\\"newPet['skills']\\\" let-i=\\\"index\\\">\\n        <p *ngIf=\\\"newPet['skills'][i].length > 0 && newPet['skills'][i].length < 3 && messages['skillShort']['display'] == true \\\">\\n            {{messages['skillShort']['message']}}\\n        </p>\\n        <p *ngIf=\\\"newPet['skills'][i].length > 45 && messages['skillShort']['display'] == true \\\">\\n            {{messages['skillLong']['message']}}\\n        </p>\\n    </ng-template>\\n    \\n    <!-- endregion -->\\n\\n<div class=\\\"user-form\\\">\\n    <form (submit)=\\\"updatePetViaService()\\\">\\n            <h4>Pet name:</h4>\\n            <input (keyup)=\\\"toggleMessageDisplay('nameShort'); toggleMessageDisplay('nameLong')\\\" type=\\\"text\\\" name=\\\"pet-name\\\" [(ngModel)]=\\\"newPet['name']\\\">\\n            \\n            <h4>Pet type:</h4>\\n            <input (keyup)=\\\"toggleMessageDisplay('typeShort'); toggleMessageDisplay('typeLong')\\\" type=\\\"text\\\" name=\\\"pet-type\\\" [(ngModel)]=\\\"newPet['type']\\\">\\n    \\n            <h4>Description:</h4>\\n            <input (keyup)=\\\"toggleMessageDisplay('descShort'); toggleMessageDisplay('descLong')\\\" type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"newPet['description']\\\">\\n    \\n            <h4>Skills:</h4>\\n            <input (keyup)=\\\"toggleMessageDisplay('skillShort'); toggleMessageDisplay('skillLong')\\\" type=\\\"text\\\" name=\\\"skill-1\\\" [(ngModel)]=\\\"newPet['skills'][0]\\\">\\n            <input (keyup)=\\\"toggleMessageDisplay('skillShort'); toggleMessageDisplay('skillLong')\\\" type=\\\"text\\\" name=\\\"skill-2\\\" [(ngModel)]=\\\"newPet['skills'][1]\\\">\\n            <input (keyup)=\\\"toggleMessageDisplay('skillShort'); toggleMessageDisplay('skillLong')\\\" type=\\\"text\\\" name=\\\"skill-3\\\" [(ngModel)]=\\\"newPet['skills'][2]\\\">\\n            <button (click)=\\\"\\n            toggleMessageDisplay('nameShort');\\n            toggleMessageDisplay('nameLong');\\n            toggleMessageDisplay('typeShort');\\n            toggleMessageDisplay('typeLong');\\n            toggleMessageDisplay('descShort');\\n            toggleMessageDisplay('descLong');\\n            toggleMessageDisplay('skillShort');\\n            toggleMessageDisplay('skillLong');\\n            \\\" type=\\\"submit\\\">Submit</button>\\n    </form>\\n    <button [routerLink]=\\\"['/pets']\\\">Cancel</button>\\n</div>\\n\\n<!-- <p>\\n    {{newPet | json }}\\n</p> -->\"","module.exports = \"<p>home works!</p>\\n\"","module.exports = \"<h3>{{title}}</h3>\\n\\n<!-- #region validations -->\\n<!-- Name -->\\n<p *ngIf=\\\"newPet['name'].length < 3 && messages['nameShort']['display'] == true \\\">\\n    {{messages['nameShort']['message']}}\\n</p>\\n<p *ngIf=\\\"newPet['name'].length > 45 && messages['nameLong']['display'] == true \\\">\\n    {{messages['nameLong']['message']}}\\n</p>\\n\\n<!-- Type -->\\n<p *ngIf=\\\"newPet['type'].length < 3 && messages['typeShort']['display'] == true \\\">\\n    {{messages['typeShort']['message']}}\\n</p>\\n<p *ngIf=\\\"newPet['type'].length > 45 && messages['typeLong']['display'] == true \\\">\\n    {{messages['typeLong']['message']}}\\n</p>\\n\\n<!-- Description -->\\n<p *ngIf=\\\"newPet['description'].length < 3 && messages['descShort']['display'] == true \\\">\\n    {{messages['descShort']['message']}}\\n</p>\\n<p *ngIf=\\\"newPet['description'].length > 45 && messages['descLong']['display'] == true \\\">\\n    {{messages['descLong']['message']}}\\n</p>\\n\\n<!-- Skill -->\\n<ng-template ngFor let-skill [ngForOf]=\\\"newPet['skills']\\\" let-i=\\\"index\\\">\\n    <p *ngIf=\\\"newPet['skills'][i].length > 0 && newPet['skills'][i].length < 3 && messages['skillShort']['display'] == true \\\">\\n        {{messages['skillShort']['message']}}\\n    </p>\\n    <p *ngIf=\\\"newPet['skills'][i].length > 45 && messages['skillShort']['display'] == true \\\">\\n        {{messages['skillLong']['message']}}\\n    </p>\\n</ng-template>\\n\\n<!-- Entry Existed -->\\n<p *ngIf=\\\"messages['entryExists']['display'] == true \\\">\\n    {{messages['entryExists']['message']}}\\n</p>\\n\\n\\n<!-- endregion -->\\n\\n\\n<div class=\\\"user-form\\\">\\n    <form (submit)=\\\"createPetViaService()\\\">\\n        <h4>Pet name:</h4>\\n        <input (keyup)=\\\"toggleMessageDisplay('nameShort'); toggleMessageDisplay('nameLong')\\\" type=\\\"text\\\" name=\\\"pet-name\\\" [(ngModel)]=\\\"newPet['name']\\\">\\n        \\n        <h4>Pet type:</h4>\\n        <input (keyup)=\\\"toggleMessageDisplay('typeShort'); toggleMessageDisplay('typeLong')\\\" type=\\\"text\\\" name=\\\"pet-type\\\" [(ngModel)]=\\\"newPet['type']\\\">\\n\\n        <h4>Description:</h4>\\n        <input (keyup)=\\\"toggleMessageDisplay('descShort'); toggleMessageDisplay('descLong')\\\" type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"newPet['description']\\\">\\n\\n        <h4>Skills (Optional):</h4>\\n        <input (keyup)=\\\"toggleMessageDisplay('skillShort'); toggleMessageDisplay('skillLong')\\\" type=\\\"text\\\" name=\\\"skill-1\\\" [(ngModel)]=\\\"newPet['skills'][0]\\\">\\n        <input (keyup)=\\\"toggleMessageDisplay('skillShort'); toggleMessageDisplay('skillLong')\\\" type=\\\"text\\\" name=\\\"skill-2\\\" [(ngModel)]=\\\"newPet['skills'][1]\\\">\\n        <input (keyup)=\\\"toggleMessageDisplay('skillShort'); toggleMessageDisplay('skillLong')\\\" type=\\\"text\\\" name=\\\"skill-3\\\" [(ngModel)]=\\\"newPet['skills'][2]\\\">\\n        <button (click)=\\\"\\n        toggleMessageDisplay('nameShort');\\n        toggleMessageDisplay('nameLong');\\n        toggleMessageDisplay('typeShort');\\n        toggleMessageDisplay('typeLong');\\n        toggleMessageDisplay('descShort');\\n        toggleMessageDisplay('descLong');\\n        toggleMessageDisplay('skillShort');\\n        toggleMessageDisplay('skillLong');\\n        \\\" type=\\\"submit\\\">Submit</button>\\n    </form>\\n    <button [routerLink]=\\\"['/pets']\\\">Cancel</button>\\n</div>\\n\\n<!-- <p>\\n    {{newPet | json }}\\n</p> -->\"","module.exports = \"<button [routerLink]=\\\"['/pets']\\\">Home</button>\\n<h3>\\n    {{title}}\\n</h3>\\n<hr>\\n\\n<h3>\\n    Pet type:\\n</h3>\\n<p>\\n    {{pet['type']}}\\n</p>\\n<h3>\\n    Description:\\n</h3>\\n<p>\\n    {{pet['description']}}\\n</p>\\n<h3>\\n    Skills:\\n</h3>\\n<p *ngFor=\\\"let skill of pet['skills']\\\">\\n    {{skill}}\\n</p>\\n<h3>\\n    Likes\\n</h3>\\n<p>\\n    {{pet['likes']}}\\n</p>\\n\\n<button (click)=\\\"deletePetViaService()\\\">Adopt this pet</button>\\n<button *ngIf=\\\"likeLimit == false\\\" (click)=\\\"addLikeOfPetViaService()\\\">Like this pet</button>\\n\\n<hr>\\n<!-- <p>\\n    {{ pet | json }}\\n</p> -->\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { HttpService } from '../http.service';\n\n\n@Component({\n  selector: 'app-all-pets',\n  templateUrl: './all-pets.component.html',\n  styleUrls: ['../app.component.css']\n})\nexport class AllPetsComponent implements OnInit {\n\n  title = \"These pets are looking for a home!\";\n  pets = [];\n\n\n  constructor(private _httpService: HttpService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.getAllPetsViaService();\n  }\n\n  getAllPetsViaService() {\n    let observable = this._httpService.getAllPets();\n    observable.subscribe(data => {\n      console.log(\"Pets Processing: \", data)\n      this.pets = data['data'];\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { HomeComponent } from './home/home.component';\nimport { AllPetsComponent } from './all-pets/all-pets.component';\nimport { NewPetComponent } from './new-pet/new-pet.component';\nimport { EditPetComponent } from './edit-pet/edit-pet.component';\nimport { ViewPetComponent } from './view-pet/view-pet.component';\n\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/pets' },\n  // { path: 'home', component: HomeComponent },\n  { path: 'pets', component: AllPetsComponent },\n  { path: 'pets/new', component: NewPetComponent },\n  { path: 'pets/:id/edit', component: EditPetComponent },\n  { path: 'pets/:id', component: ViewPetComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"*{\\r\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\r\\n}\\r\\n#container{\\r\\n    width: 970px;\\r\\n    margin: 0px auto;\\r\\n    text-align: center;\\r\\n}\\r\\n.user-form {\\r\\n    text-align: center;\\r\\n}\\r\\n.user-form form input, .user-form form h4{\\r\\n    margin: 0px auto;\\r\\n}\\r\\n.user-form form input{\\r\\n    display: block;\\r\\n}\\r\\n.user-form form h4{\\r\\n    display: block;\\r\\n}\\r\\n/* table-sections */\\r\\n.table-section{\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    margin-left: 20px;\\r\\n    margin-right: 20px;\\r\\n}\\r\\n.table-interface{\\r\\n    margin-bottom: 14px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnREFBZ0Q7QUFDcEQ7QUFDQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUNBO0lBQ0ksY0FBYztBQUNsQjtBQUVBLG1CQUFtQjtBQUVuQjtJQUNJLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqe1xyXG4gICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEdlbmV2YSwgVGFob21hLCBzYW5zLXNlcmlmO1xyXG59XHJcbiNjb250YWluZXJ7XHJcbiAgICB3aWR0aDogOTcwcHg7XHJcbiAgICBtYXJnaW46IDBweCBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4udXNlci1mb3JtIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnVzZXItZm9ybSBmb3JtIGlucHV0LCAudXNlci1mb3JtIGZvcm0gaDR7XHJcbiAgICBtYXJnaW46IDBweCBhdXRvO1xyXG59XHJcblxyXG4udXNlci1mb3JtIGZvcm0gaW5wdXR7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4udXNlci1mb3JtIGZvcm0gaDR7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLyogdGFibGUtc2VjdGlvbnMgKi9cclxuXHJcbi50YWJsZS1zZWN0aW9ue1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4udGFibGUtaW50ZXJmYWNle1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTRweDtcclxufVxyXG4iXX0= */\"","import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Pet Shelter';\n\n  constructor(private _httpService: HttpService) { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpService } from './http.service';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { HomeComponent } from './home/home.component';\nimport { AllPetsComponent } from './all-pets/all-pets.component';\nimport { NewPetComponent } from './new-pet/new-pet.component';\nimport { EditPetComponent } from './edit-pet/edit-pet.component';\nimport { ViewPetComponent } from './view-pet/view-pet.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AllPetsComponent,\n    NewPetComponent,\n    EditPetComponent,\n    ViewPetComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { HttpService } from '../http.service';\n\n\n@Component({\n  selector: 'app-edit-pet',\n  templateUrl: './edit-pet.component.html',\n  styleUrls: ['../app.component.css']\n})\nexport class EditPetComponent implements OnInit {\n\n  title = \"Edit this pet\";\n\n  targetId = \"\";\n\n  newPet = {\n    _id: \"\",\n    name: \"\",\n    type: \"\",\n    description: \"\",\n    skills: [\"\", \"\", \"\"]\n  }\n\n  messages = {\n    nameShort: { display: false, message: \"Pet name must have at least 3 characters\" },\n    nameLong: { display: false, message: \"Pet name cannot exceed 45 characters\" },\n\n    typeShort: { display: false, message: \"Pet type must have at least 3 characters\" },\n    typeLong: { display: false, message: \"Pet type cannot exceed 45 characters\" },\n\n    descShort: { display: false, message: \"Description must have at least 3 characters\" },\n    descLong: { display: false, message: \"Description cannot exceed 280 characters\" },\n\n    skillShort: { display: false, message: \"Skills must have at least 3 characters or be left blank\" },\n    skillLong: { display: false, message: \"Skills cannot exceed 45 characters\" },\n\n  }\n\n\n\n  constructor(private _httpService: HttpService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params);\n      this.getPetViaService(params['id']);\n      this.targetId = params['id'];\n    });\n  }\n\n  getPetViaService(id) {\n    let observable = this._httpService.getPetById(id);\n    observable.subscribe(data => {\n      console.log(\"Pet Processing: \", data);\n\n      this.newPet['_id'] = data['_id'];\n      this.newPet['name'] = data['name'];\n      this.newPet['type'] = data['type'];\n      this.newPet['description'] = data['description'];\n      this.newPet['skills'] = data['skills'];\n\n      this.title = `Details about ${data['name']}`;\n    });\n  }\n\n  updatePetViaService() {\n    let observable = this._httpService.updatePet(this.newPet);\n    observable.subscribe(data => {\n      console.log(\"Pet Update Processing: \", data);\n      if(data['success'] == true){\n        this._router.navigate([`/pets/${this.targetId}`]);\n      }\n      else{\n        console.log(data);\n      }\n    });\n  }\n\n  toggleMessageDisplay(messageName: string) {\n    this.messages[`${messageName}`]['display'] = true;\n    console.log(`${messageName}: ${this.messages[`${messageName}`]['display']}`)\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { relative } from 'path';\nimport { post } from 'selenium-webdriver/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  getAllPets(){\n    return this._http.get('/api/pets');\n  }\n\n  getPetById(id){\n    return this._http.get(`/api/pet/${id}`);\n  }\n\n  createPet(post){\n    return this._http.post('/api/pets', post);\n  }\n\n  updatePet(post){\n    return this._http.put('/api/pets', post);\n  }\n\n  likePet(post){\n    return this._http.put('/api/likes/', post);\n  }\n\n  deletePet(id){\n    return this._http.delete(`/api/pets/${id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\n\nimport { HttpService } from '../http.service';\n\n\n@Component({\n  selector: 'app-new-pet',\n  templateUrl: './new-pet.component.html',\n  styleUrls: ['../app.component.css']\n})\nexport class NewPetComponent implements OnInit {\n\n  title = \"Know of a pet needing a home?\";\n\n  newPet = {\n    name: \"\",\n    type: \"\",\n    description: \"\",\n    skills: [\"\", \"\", \"\"]\n  }\n\n  messages = {\n    nameShort: { display: false, message: \"Pet name must have at least 3 characters\" },\n    nameLong: { display: false, message: \"Pet name cannot exceed 45 characters\" },\n\n    typeShort: { display: false, message: \"Pet type must have at least 3 characters\" },\n    typeLong: { display: false, message: \"Pet type cannot exceed 45 characters\" },\n\n    descShort: { display: false, message: \"Description must have at least 3 characters\" },\n    descLong: { display: false, message: \"Description cannot exceed 280 characters\" },\n\n    skillShort: { display: false, message: \"Skills must have at least 3 characters or be left blank\" },\n    skillLong: { display: false, message: \"Skills cannot exceed 45 characters\" },\n\n    entryExists: { display: false, message: \"Pet already in database, please choose a different name!\"},\n\n  }\n\n  constructor(private _httpService: HttpService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  createPetViaService() {\n    let observable = this._httpService.createPet(this.newPet);\n    observable.subscribe(data => {\n      console.log(\"Pet processing: \", data);\n      if(data['existed'] == true){\n        this.messages.entryExists.display = true;\n      }\n      else{\n        this.messages.entryExists.display = false;\n        if(data['success'] == true){\n          this._router.navigate([`/pets`]); \n        }\n        else{\n          console.log(data);\n        }\n      }\n    });\n  }\n\n  toggleMessageDisplay(messageName: string) {\n    this.messages[`${messageName}`]['display'] = true;\n    console.log(`${messageName}: ${this.messages[`${messageName}`]['display']}`)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { HttpService } from '../http.service';\n\n\n@Component({\n  selector: 'app-view-pet',\n  templateUrl: './view-pet.component.html',\n  styleUrls: ['../app.component.css']\n})\nexport class ViewPetComponent implements OnInit {\n\n  title = \"\";\n  pet = {};\n  likeLimit = false;\n\n  constructor(private _httpService: HttpService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params);\n      this.getPetViaService(params['id']);\n    });\n    this.likeLimit = false;\n  }\n\n  getPetViaService(id) {\n    let observable = this._httpService.getPetById(id);\n    observable.subscribe(data =>{\n      console.log(\"Pet Processing: \", data);\n      this.pet = data;\n      this.title = `Details about ${data['name']}`;\n    }); \n  }\n\n  deletePetViaService(){\n    let observable = this._httpService.deletePet(this.pet['_id']);\n    observable.subscribe(data =>{\n      console.log(\"Adopt Pet Processing: \", data);\n    });\n    this._router.navigate(['/pets']);\n  }\n\n  addLikeOfPetViaService(){\n    if(this.likeLimit == false){\n      let observable = this._httpService.likePet(this.pet);\n      observable.subscribe(data => {\n        console.log(\"Pet Like Processing: \", data);\n      });\n      this.likeLimit = true;\n      this.getPetViaService(this.pet['_id']);\n    }\n    else{\n      console.log(\"Like limit reached...\");\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}